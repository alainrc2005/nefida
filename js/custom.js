$(document).ready(function (){
  
	"use strict";
	
	/* Page Loader
	-----------------------------------------------------*/
	
	$(window).load(function() {
	  $('#page-loader .loader').children().fadeOut(300);
	  $('#page-loader').delay(500).fadeOut(500,function() {
		  $('#home .home-intro').fadeIn(300);
      });	
	});
	
	/* Smooth Scrolling
	-----------------------------------------------------*/
	
	$.localScroll({
	});
	
	
	/* Message slide
	-----------------------------------------------------*/
	
	$('.message-trigger').click(function(){
		
		if ($('#message-slide').hasClass('visible')) {
			$('#message-slide').slideUp(700,"easeOutCirc").removeClass('visible');
			$('.message-trigger').toggleClass('active','remove');
		} else {
			$('#message-slide').slideDown(700,"easeOutCirc").addClass('visible');
			$('.message-trigger').toggleClass('active','add');
		}
		
		return false;
	})
	
	
	/* Home
	-----------------------------------------------------*/
	
	$('#home > .container').css({'height': ($(window).height()) + 'px'});
	$('.home-intro').css({'margin-top': (($(window).height()/2)-($('.home-intro').innerHeight()/2)) + 'px'});
	
	$(window).resize(function() {
	  $('#home > .container').css({'height': ($(window).height()) + 'px'});
	  $('.home-intro').css({'margin-top': (($(window).height()/2)-($('.home-intro').innerHeight()/2)) + 'px'});
	});
	
	/* Sticky Nav
	-----------------------------------------------------*/
	
	var stickyNavTop = $('#navigation').offset().top;  
	
	var stickyNav = function() {  
	  var scrollTop = $(window).scrollTop(); 
	  if (scrollTop > stickyNavTop+120) { 
		  $('#nav').addClass('sticky'); 
	  } else {  
		  $('#nav').removeClass('sticky'); 
	  }  
	};  
	
	$(window).scroll(function() {  
	
		if( $(window).width() > 992 ) {
	
		  var scrollTop = $(window).scrollTop();
		  if ((scrollTop+10)&&(scrollTop<120)) { 
			  $('#nav').css({
				  opacity: 1-((scrollTop)/100)
			  });	
		  } 
		  if ((scrollTop>200)&&(scrollTop<350)) { 
			  $('#nav').css({
				  opacity: (scrollTop-200)/100
			  });	
		  } 
		  if (scrollTop>350) { 
			  $('#nav').css({
				  opacity: 1
			  });	
		  } 
		  stickyNav();
		
		}
		
	}); 
	
	/* jCarousel
	-----------------------------------------------------*/  
	
	var $carousel = $('.services-carousel');
	var $containerWidth =$('.container').width();
	
	$carousel.jcarousel({
		'animation': {
			'duration': 1000,
			'easing': 'easeInOutQuint'
		}
	});
	
	if( $(window).width() < 768 ) {
		$('.jcarousel-prev').jcarouselControl({target:'-=1'});
		$('.jcarousel-next').jcarouselControl({target:'+=1'});
	} else if( $(window).width() < 992 ) {
		$('.jcarousel-prev').jcarouselControl({target:'-=2'});
		$('.jcarousel-next').jcarouselControl({target:'+=2'});
	} else {
		$('.jcarousel-prev').jcarouselControl({target:'-=3'});
		$('.jcarousel-next').jcarouselControl({target:'+=3'});
	}
	
	$('.jcarousel-pagination').jcarouselPagination({ });

	$('.jcarousel-pagination a:first-child').addClass('active');
	
	$('.jcarousel-pagination')
    .on('active.jcarouselpagination', 'a', function() {
		$('.jcarousel-pagination a:first-child').removeClass('active');
        $(this).addClass('active');
    })
    .on('inactive.jcarouselpagination', 'a', function() {
        $(this).removeClass('active');
    });
  
	function swipeCarousel( e, dir ) {
		var $carousel = $(e.currentTarget);
        if( dir === 'left' ) {
			$carousel.siblings('.jcarousel-control').children('.jcarousel-next').trigger('click');
        }
        if( dir === 'right' ) {
	   		$carousel.siblings('.jcarousel-control').children('.jcarousel-prev').trigger('click');
        }
	}
	
	$carousel.swipe({
		swipeLeft       : swipeCarousel,
		swipeRight      : swipeCarousel,
		allowPageScroll : 'auto'
	});
	
	/* Testimonial Slider (Flexslider)
	-----------------------------------------------------*/
		
	$('.flexslider').flexslider({  
	  namespace: "flex-",             //{NEW} String: Prefix string attached to the class of every element generated by the plugin
	  selector: ".slides > li",       //{NEW} Selector: Must match a simple pattern. '{container} > {slide}' -- Ignore pattern at your own peril
	  animation: "slide",              //String: Select your animation type, "fade" or "slide"
	  easing: "swing",               //{NEW} String: Determines the easing method used in jQuery transitions. jQuery easing plugin is supported!
	  direction: "horizontal",        //String: Select the sliding direction, "horizontal" or "vertical"
	  reverse: false,                 //{NEW} Boolean: Reverse the animation direction
	  animationLoop: true,             //Boolean: Should the animation loop? If false, directionNav will received "disable" classes at either end
	  smoothHeight: false,            //{NEW} Boolean: Allow height of the slider to animate smoothly in horizontal mode 
	  startAt: 0,                     //Integer: The slide that the slider should start on. Array notation (0 = first slide)
	  slideshow: false,                //Boolean: Animate slider automatically
	  slideshowSpeed: 7000,           //Integer: Set the speed of the slideshow cycling, in milliseconds
	  animationSpeed: 600,            //Integer: Set the speed of animations, in milliseconds
	  initDelay: 0,                   //{NEW} Integer: Set an initialization delay, in milliseconds
	  randomize: false,               //Boolean: Randomize slide order
	   
	  // Usability features
	  pauseOnAction: true,            //Boolean: Pause the slideshow when interacting with control elements, highly recommended.
	  pauseOnHover: false,            //Boolean: Pause the slideshow when hovering over slider, then resume when no longer hovering
	  useCSS: true,                   //{NEW} Boolean: Slider will use CSS3 transitions if available
	  touch: true,                    //{NEW} Boolean: Allow touch swipe navigation of the slider on touch-enabled devices
	  video: false,                   //{NEW} Boolean: If using video in the slider, will prevent CSS3 3D Transforms to avoid graphical glitches
	   
	  // Primary Controls
	  controlNav: true,               //Boolean: Create navigation for paging control of each clide? Note: Leave true for manualControls usage
	  directionNav: true,             //Boolean: Create navigation for previous/next navigation? (true/false)
	  prevText: "",           //String: Set the text for the "previous" directionNav item
	  nextText: "",               //String: Set the text for the "next" directionNav item
	   
	  // Secondary Navigation
	  keyboard: true,                 //Boolean: Allow slider navigating via keyboard left/right keys
	  multipleKeyboard: false,        //{NEW} Boolean: Allow keyboard navigation to affect multiple sliders. Default behavior cuts out keyboard navigation with more than one slider present.
	  mousewheel: true,              //{UPDATED} Boolean: Requires jquery.mousewheel.js (https://github.com/brandonaaron/jquery-mousewheel) - Allows slider navigating via mousewheel
	  pausePlay: false,               //Boolean: Create pause/play dynamic element
	  pauseText: 'Pause',             //String: Set the text for the "pause" pausePlay item
	  playText: 'Play',               //String: Set the text for the "play" pausePlay item
	   
	  // Special properties
	  controlsContainer: "",          //{UPDATED} Selector: USE CLASS SELECTOR. Declare which container the navigation elements should be appended too. Default container is the FlexSlider element. Example use would be ".flexslider-container". Property is ignored if given element is not found.
	  manualControls: "",             //Selector: Declare custom control navigation. Examples would be ".flex-control-nav li" or "#tabs-nav li img", etc. The number of elements in your controlNav should match the number of slides/tabs.
	  sync: "",                       //{NEW} Selector: Mirror the actions performed on this slider with another slider. Use with care.
	  asNavFor: "",                   //{NEW} Selector: Internal property exposed for turning the slider into a thumbnail navigation for another slider
	   
	  // Carousel Options
	  itemWidth: 0,                   //{NEW} Integer: Box-model width of individual carousel items, including horizontal borders and padding.
	  itemMargin: 0,                  //{NEW} Integer: Margin between carousel items.
	  minItems: 0,                    //{NEW} Integer: Minimum number of carousel items that should be visible. Items will resize fluidly when below this.
	  maxItems: 0,                    //{NEW} Integer: Maxmimum number of carousel items that should be visible. Items will resize fluidly when above this limit.
	  move: 0,                        //{NEW} Integer: Number of carousel items that should move on animation. If 0, slider will move all visible items.
									   
	  // Callback API
	  start: function(){},            //Callback: function(slider) - Fires when the slider loads the first slide
	  before: function(){},           //Callback: function(slider) - Fires asynchronously with each slider animation
	  after: function(){},            //Callback: function(slider) - Fires after each slider animation completes
	  end: function(){},              //Callback: function(slider) - Fires when the slider reaches the last slide (asynchronous)
	  added: function(){},            //{NEW} Callback: function(slider) - Fires after a slide is added
	  removed: function(){}   
	});
	
	/* Quicksand
	-----------------------------------------------------*/

	var $filterType = $('#filter-options li.active a').attr('class');
	var $holder = $('.filtered-list');
	var $data = $holder.clone();
	var $filteredData;
	$('#filter-options li a').click(function(e) {
	  $('#filter-options li').removeClass('active');
	  var $filterType = $(this).attr('class');
	  $(this).parent().addClass('active');
	  if ($filterType === 'all') {
		$filteredData = $data.find('li');
	  }
	  else {
		$filteredData = $data.find('li[data-type=' + $filterType + ']');
	  }
  
	  $holder.quicksand($filteredData, {
		duration: 500,
		easing: 'easeInOutQuad'
	  });
	  
	  /* YOU NEED TO COPY HERE YOUR COLORBOX CONFIGURATION (5)*/
	
	  $(".cb-photo").colorbox({
		fixed: true,
		opacity: 0,
		maxWidth:'95%', 
		maxHeight:'95%',
		rel: 'gallery',
		title: false
	});

	/* YOU NEED TO COPY HERE YOUR COLORBOX CONFIGURATION (5)*/
  
	  return false;
	});
	
	/* Colorbox
	-----------------------------------------------------*/
	
	$(".cb-photo").colorbox({
		fixed: true,
		opacity: 0,
		maxWidth:'95%', 
		maxHeight:'95%',
		rel: 'gallery',
		title: false
	});
	
	/* Contact Form
	-----------------------------------------------------*/
	
	var $contactform  = $('#contact-form');

	jQuery.validator.addMethod("notEqual", function(value, element, param) {
	  return this.optional(element) || value != param;
	}, "This field is required.");

	var nameVal = $('#name').val();
	var msgVal = $('#message').val();

    $contactform.validate({
        rules: {
            name: {
                required    : true,
                minlength   : 1,
				notEqual    : nameVal
            },
            email: {
                required    : true,
                email       : true
            },
            message: {
                required    : true,
                minlength   : 1,
				notEqual    : msgVal
            }
        },
        messages: {
            name: {
                required    : "Por favor, Nombre y Apellidos son requeridos.",
				notEqual    : "Por favor, Nombre y Apellidos son requeridos."
            },
            email: {
                required    : "La dirección de correo electrónico es requerida."
            },
            message: {
                required    : "Escriba el mensaje a enviar.",
                notEqual 	 : "Escriba el mensaje a enviar."
            }
        },
    });

    // Send the email
    $contactform.submit(function(){
        var $success      = '<strong>Correcto.</strong> Su mensaje ha sido enviado.';
	    var $error      = '<strong>Error!</strong> Su mensaje no ha sido enviado - inténtelo nuevamente...';
      	var response;
        if ($contactform.valid()){
            $.ajax({
                type: "POST",
                url: "php/contact-form.php",
                data: $(this).serialize(),
                success: function(msg) {
                    if (msg === 'SEND') {
                        response = '<div class="alert alert-success">'+ $success +'</div>';
                    }
                    else {
                        response = '<div class="alert alert-error">'+ $error +'</div>';
                    }
                    $(".alert-error,.alert-success").remove();
                    $contactform.prepend(response);
                }
             });
            return false;
        }
        return false;
    });
	
	/* Animations
	-----------------------------------------------------*/
	
	jQuery('.animated').appear();

	jQuery(document.body).on('appear', '.fade-in', function() {
		jQuery(this).each(function(){ jQuery(this).addClass('fade-in-animation') });
	});
	
	jQuery(document.body).on('appear', '.zoom-in', function() {
		jQuery(this).each(function(){ jQuery(this).addClass('zoom-in-animation') });
	});
	
	jQuery(document.body).on('appear', '.bounce-in', function() {
		jQuery(this).each(function(){ jQuery(this).addClass('bounce-in-animation') });
	});
	
	jQuery(document.body).on('appear', '.slide-in-right', function() {
		jQuery(this).each(function(){ jQuery(this).addClass('slide-in-right-animation') });
	});
	
	/* Responsive Videos
	-----------------------------------------------------*/

	$(function(){
	  $('body').fitVids();
	});
	

});
